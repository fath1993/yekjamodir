# Generated by Django 5.0 on 2024-02-06 11:57

import django.db.models.deletion
import django_jalali.db.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0011_remove_profile_extra_storage_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExtraStoragePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='عنوان')),
                ('price', models.PositiveIntegerField(verbose_name='قیمت - تومان')),
                ('expiry_days', models.PositiveSmallIntegerField(verbose_name='تعداد روز انقضا پس از فعالسازی')),
                ('storage', models.PositiveSmallIntegerField(help_text='مگابایت', verbose_name='افزایش فضای ذخیره به میزان')),
            ],
            options={
                'verbose_name': 'پلن افزایش حجم',
                'verbose_name_plural': 'پلن های افزایش حجم',
            },
        ),
        migrations.RemoveField(
            model_name='profile',
            name='birthday',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='city',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='province',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='wallet_balance',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='zip_code',
        ),
        migrations.AddField(
            model_name='profile',
            name='default_financial_broker_limit',
            field=models.PositiveIntegerField(default=1, verbose_name='حداکثر تعداد کارگزاران مالی'),
        ),
        migrations.AddField(
            model_name='profile',
            name='default_maximum_storage_quota',
            field=models.PositiveIntegerField(default=100, help_text='مگابایت', verbose_name='حداکثر فضای ذخیره سازی'),
        ),
        migrations.AddField(
            model_name='profile',
            name='default_metapost_daily_send_limit',
            field=models.PositiveIntegerField(default=10, verbose_name='حداکثر تعداد پیام ارسالی روزانه'),
        ),
        migrations.AddField(
            model_name='profile',
            name='extra_storage_expiry_date',
            field=django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='تاریخ انقضای حجم اضافه'),
        ),
        migrations.AddField(
            model_name='profile',
            name='metapost_last_send_date',
            field=django_jalali.db.models.jDateTimeField(blank=True, null=True, verbose_name='تاریخ آخرین ارسال متاپست'),
        ),
        migrations.AddField(
            model_name='profile',
            name='profile_pic',
            field=models.ImageField(blank=True, upload_to='', verbose_name='عکس پروفایل'),
        ),
        migrations.AddField(
            model_name='vipplan',
            name='card_background_color',
            field=models.CharField(choices=[('gold', 'gold'), ('silver', 'silver'), ('bronze', 'bronze'), ('none', 'none')], default='none', max_length=255, verbose_name='عنوان'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_user', to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='profile',
            name='extra_storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_storage_profile', to='accounts.extrastorageplan', verbose_name='اشتراک'),
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vip_plan_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='عنوان پلن اشتراک')),
                ('vip_plan_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='قیمت - ریال')),
                ('vip_plan_expiry_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد روز انقضا پس از فعالسازی')),
                ('vip_plan_maximum_storage_quota', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='حداکثر فضای ذخیره سازی مگابایت')),
                ('vip_plan_metapost_daily_send_limit', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد محدودیت روزانه ارسال پیام')),
                ('vip_plan_financial_broker_limit', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد محدودیت ساخت کارگزار مالی')),
                ('vip_plan_numbers_of_assistant', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='تعداد کامندان')),
                ('storage_plan_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='عنوان پلن افزایش حجم')),
                ('storage_plan_price', models.PositiveIntegerField(blank=True, null=True, verbose_name='قیمت - تومان')),
                ('storage_plan_expiry_days', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='تعداد روز انقضا پس از فعالسازی')),
                ('storage_plan_storage', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='افزایش فضای ذخیره - مگابایت')),
                ('created_at', django_jalali.db.models.jDateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'صورت حساب',
                'verbose_name_plural': 'صورت حساب ها',
                'ordering': ['created_at'],
            },
        ),
    ]
